#! /usr/bin/bash

read -p "Enter the table you want to insert into: " tname
	if [[ -z $tname ]] #1 if
	then
		echo "Error: Table name must be a non-empty string!"
		
	else
		
		table=${tname,,}
		if [[ -f $table && -f ".meta$table" ]] # 2 if
		then
			
			# inserting metadata file lines into an array called columns
			mapfile -t columns < ".meta$table"
			
			
			# looping to take user's input for every column
			col_num=$(head -n -1 .meta$table | wc -l | cut -d" " -f1)
			declare -a values
			
			line=""
			valid_row=1
			
			# looping over each of one of the columns to get input value and validate it
			for ((i=0;i<$col_num;i++))
			do 
				col_name=$(echo ${columns[$i]} | cut -d: -f1)
				col_type=$(echo ${columns[$i]} | cut -d: -f2)
				
				read -p "Enter value for $col_name($col_type): " values[$i]
				
			
			# validation primary key insertion
			if [[ $i -eq 0 && $valid_row -eq 1 ]]; then
			
			validpk=$(grep -E "^${values[$i]}" "$table" | cut -d: -f1)  # check if there's a row starts with the first value entered (in pk col)
			
			if [[ -z $validpk ]] # 4 if
			then 
				# if we found match >> continue chacking the column type
				if [[ $col_type = "num" ]] # 5 if
				then
					if ! [[ ${values[$i]} =~ ^[0-9]+$ ]] # 6 if
					then
						echo "Error: column $col_name type is $col_type! You must enter a unique numeric value"
						valid_row=0
					
					else
						line+=${values[$i]}

					fi # 6 if
				elif [[ $col_type = "str" ]] # 5 if
				then
				if [[  ${values[$i]} =~ ^[a-zA-Z0-9]+$ ]] 
					then
						echo  "Error: You should enter a non-empty unique value for column $col_name(PK)"
						valid_row=0
						
					else
						line+=${values[$i]}
					fi # 7 if
						
				fi #5 if
			elif [[ -z ${values[$i]} ]]
					then
						echo "Error: You should enter a non-empty unique value for column $col_name(PK)"
						valid_row=0
			# if we found duplicate
			else
				echo "${values[$i]} already exists in $col_name, voilating primary key constraint!"
				valid_row=0
				 
			fi # 4 if
		fi
				
######################## Validating the rest of the columns #################
		if [[ $i -gt 0 && $valid_row -eq 1 ]]; then
				
				if [[ $col_type = "num" ]] # 8 if
				then
					if [[ -z ${values[$i]} ]] # 9 if
					then
						echo "Error: You should enter a non-empty value for column $col_name"
						valid_row=0
						
					elif ! [[ ${values[$i]} =~ ^[0-9]+$ ]]
					then
						echo "Error: column $col_name type is $col_type! You must enter a numeric value"	
						valid_row=0
					else 
						
						line+=":${values[$i]}"
					fi # 9 if
				elif [[ $col_type = "str" ]] # 8 if
				then
					if [[ -z ${values[$i]} ]] # 10 if
					then
						echo "Error: column $col_name type is $col_type! You should enter a non-empty string"
						valid_row=0
						
					else 
						line+=":${values[$i]}"
						
					fi # 10 if
				fi # 9 if
				fi
			
			if [[ $valid_row -eq 0 ]]; then
			    line=""
			    echo "Row insertion aborted due to invalid input."
			    break # Exit the loop if any column is invalid
			  fi
					
			done
			
			
			if [[ $valid_row -eq 1 ]]
			then
				echo $line >> $table
				echo "$line is inserted into the table" 
			fi

			
		else	
			echo "$table does not exist"
		fi # 2 if
	
fi #1 if

