#!/usr/bin/bash

# Validate strings (only chars and _ )
validate_str() {
  if [[ "$1" =~ ^[a-zA-Z0-9_]+$ ]]; then
    return 0 # Valid
  else
    return 1 # Invalid
  fi
}

# Validate integers (numeric only)
validate_int() {
  if [[ "$1" =~ ^[1-9]+$ ]]; then
    return 0 # Valid
  else
    return 1 # Invalid
  fi
}

##################################################################
valid=1
line="" # line goes to the metadata file
cols="" # cols goes to the table file
read -p "Enter the name of the table you want to create: " tname
validate_str "$tname"
if [[ $? -ne 0 ]]; then
  echo "Invalid table name. Only alphanumeric characters and underscores are allowed."
  valid=0
else
  table=${tname,,} # Convert input to lowercase
  if [ -e ~/DBMS/$dbName/$table ]; then
    echo "$table already exists."
    valid=0
  else
    touch ~/DBMS/$dbName/$table ~/DBMS/$dbName/.meta$table
    echo "$table has been created successfully."
    
    ###################### Creating columns ######################
    read -p "How many columns do you want to create? " colnum
    validate_int "$colnum"
    if [[ $? -eq 1 ]]; then #if exit status of the validation function = 1 
      echo "Invalid input. Please enter a valid positive number for the number of columns."
      valid=0
    else

    	
       	for ((i = 1; i <= $colnum; i++)); do
       	
##################### Adding primary key #####################
		if [[ $i -eq 1 && $valid -eq 1 ]]; then
		# Enter first column (Primary Key)
		read -p "Enter the name of the first column **This will be the primary key**: " colname
		validate_str "$colname"
		if [[ $? -eq 1 ]]; then
		  echo "Invalid column name. Only alphanumeric characters and underscores are allowed."
		  valid=0
		else
		  line+=$colname
		  cols+=$colname
		  echo "Enter the type of the primary key $colname: "
		  PS3="Choose column type [1-2]: "
		  select coltype in num str; do
		    case $coltype in
		      "num")
		        line+=":num"
		        break
		        ;;
		      "str")
		        line+=":str"
		        break
		        ;;
		      *)
		        echo "Invalid type. Please select either a num or a str."
		        ;;
		    esac
		  done

		  line+=":PK\n"
		  
		fi
		
		fi

##################### Adding the rest of the columns #####################
		  if [[ $i -gt 1 && $valid -eq 1 ]]; then
		  # Enter column name and validate
		  read -p "Enter the name of column $i: " colname
		  validate_str "$colname"
		  if [[ $? -ne 0 ]]; then
		    echo "Invalid column name. Only alphanumeric characters and underscores are allowed."
		    metadata_valid=false # set to false if validation fails
		    valid=0
		  else
		    line+="$colname"
		    cols+=":$colname"
		    echo "Enter the type of column $colname: "
		    select coltype in num str; do
		      case $coltype in
		        "num")
		          line+=":num\n"
		          break
		          ;;
		        "str")
		          line+=":str\n"
		          break
		          ;;
		        *)
		          echo "Invalid type. Please select either a num or a str."
		          ;;
		      esac
		    done
		  fi
		  fi

		  # Only add to metadata if all columns validated successfully
		  if [[ $valid -eq 0 ]]; then
		    line=""
		    cols=""
		    echo "Column creation aborted due to invalid input."
		    break # Exit the loop if any column is invalid
		  fi
        done

        
    fi
  fi
fi

##################### Finalize Table #####################
        if [[ $valid -eq 0 ]]; then
          rm ~/DBMS/$dbName/$table ~/DBMS/$dbName/.meta$table
          else
          	echo -e $line >> ~/DBMS/$dbName/.meta$table
          	echo -e $cols >> ~/DBMS/$dbName/$table
          	echo "Columns has been added successfully"
          
     fi	
